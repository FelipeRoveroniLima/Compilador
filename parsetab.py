
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA DIVIDE ELSE EQUALS FALSE GREATER_THAN GREATER_THAN_EQUAL ID IF LEFT_BRACE LEFT_BRACKET LEFT_PAREN LESS_THAN LESS_THAN_EQUAL MINUS NOT NUMBER OR PLUS PRINTF RIGHT_BRACE RIGHT_BRACKET RIGHT_PAREN SEMICOLON STRING TIMES TRUE WHILEstatement : ID EQUALS expr SEMICOLON \n                     | expr\n                     | ID EQUALS expr SEMICOLON statementstatement : ID LEFT_PAREN parameters RIGHT_PAREN LEFT_BRACE statement RIGHT_BRACEparameters : ID\n                      | parameters COMMA IDstatement : ID LEFT_PAREN args RIGHT_PAREN SEMICOLONargs : expr\n                | args COMMA exprexpr : expr PLUS expr\n                | expr MINUS expr\n                | expr TIMES expr\n                | expr DIVIDE exprexpr : expr LESS_THAN expr\n                | expr LESS_THAN_EQUAL expr\n                | expr GREATER_THAN expr\n                | expr GREATER_THAN_EQUAL exprexpr : expr AND expr\n                | expr OR expr\n                | NOT exprexpr : LEFT_PAREN expr RIGHT_PARENexpr : IDexpr : NUMBERexpr : STRINGexpr : IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE statement RIGHT_BRACE expr : IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE statement RIGHT_BRACE ELSE LEFT_BRACE statement RIGHT_BRACEexpr : WHILE LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE statement RIGHT_BRACE expr : PRINTF LEFT_PAREN expr RIGHT_PAREN SEMICOLON'
    
_lr_action_items = {'ID':([0,4,5,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,48,50,52,57,61,62,71,],[2,24,24,24,30,24,24,24,24,24,24,24,24,24,24,24,24,24,2,58,24,2,2,2,2,]),'NOT':([0,4,5,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,48,52,57,61,62,71,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'LEFT_PAREN':([0,2,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,48,52,57,61,62,71,],[4,12,4,4,26,27,28,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'NUMBER':([0,4,5,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,48,52,57,61,62,71,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'STRING':([0,4,5,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,48,52,57,61,62,71,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'IF':([0,4,5,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,48,52,57,61,62,71,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'WHILE':([0,4,5,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,48,52,57,61,62,71,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'PRINTF':([0,4,5,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,48,52,57,61,62,71,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'$end':([1,2,3,6,7,24,25,34,35,36,37,38,39,40,41,42,43,44,48,56,59,63,67,68,69,73,],[0,-22,-2,-23,-24,-22,-20,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-21,-1,-3,-7,-28,-4,-25,-27,-26,]),'EQUALS':([2,],[11,]),'PLUS':([2,3,6,7,23,24,25,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,60,63,68,69,73,],[-22,13,-23,-24,13,-22,13,13,-22,13,13,13,13,13,13,13,13,13,13,13,-21,13,13,13,13,-28,-25,-27,-26,]),'MINUS':([2,3,6,7,23,24,25,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,60,63,68,69,73,],[-22,14,-23,-24,14,-22,14,14,-22,14,14,14,14,14,14,14,14,14,14,14,-21,14,14,14,14,-28,-25,-27,-26,]),'TIMES':([2,3,6,7,23,24,25,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,60,63,68,69,73,],[-22,15,-23,-24,15,-22,15,15,-22,15,15,15,15,15,15,15,15,15,15,15,-21,15,15,15,15,-28,-25,-27,-26,]),'DIVIDE':([2,3,6,7,23,24,25,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,60,63,68,69,73,],[-22,16,-23,-24,16,-22,16,16,-22,16,16,16,16,16,16,16,16,16,16,16,-21,16,16,16,16,-28,-25,-27,-26,]),'LESS_THAN':([2,3,6,7,23,24,25,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,60,63,68,69,73,],[-22,17,-23,-24,17,-22,17,17,-22,17,17,17,17,17,17,17,17,17,17,17,-21,17,17,17,17,-28,-25,-27,-26,]),'LESS_THAN_EQUAL':([2,3,6,7,23,24,25,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,60,63,68,69,73,],[-22,18,-23,-24,18,-22,18,18,-22,18,18,18,18,18,18,18,18,18,18,18,-21,18,18,18,18,-28,-25,-27,-26,]),'GREATER_THAN':([2,3,6,7,23,24,25,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,60,63,68,69,73,],[-22,19,-23,-24,19,-22,19,19,-22,19,19,19,19,19,19,19,19,19,19,19,-21,19,19,19,19,-28,-25,-27,-26,]),'GREATER_THAN_EQUAL':([2,3,6,7,23,24,25,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,60,63,68,69,73,],[-22,20,-23,-24,20,-22,20,20,-22,20,20,20,20,20,20,20,20,20,20,20,-21,20,20,20,20,-28,-25,-27,-26,]),'AND':([2,3,6,7,23,24,25,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,60,63,68,69,73,],[-22,21,-23,-24,21,-22,21,21,-22,21,21,21,21,21,21,21,21,21,21,21,-21,21,21,21,21,-28,-25,-27,-26,]),'OR':([2,3,6,7,23,24,25,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,60,63,68,69,73,],[-22,22,-23,-24,22,-22,22,22,-22,22,22,22,22,22,22,22,22,22,22,22,-21,22,22,22,22,-28,-25,-27,-26,]),'RIGHT_BRACE':([2,3,6,7,24,25,34,35,36,37,38,39,40,41,42,43,44,48,56,59,63,64,65,66,67,68,69,72,73,],[-22,-2,-23,-24,-22,-20,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-21,-1,-3,-7,-28,67,68,69,-4,-25,-27,73,-26,]),'RIGHT_PAREN':([6,7,23,24,25,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,58,60,63,68,69,73,],[-23,-24,44,-22,-20,-5,49,51,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-21,53,54,55,-6,-9,-28,-25,-27,-26,]),'SEMICOLON':([6,7,24,25,29,34,35,36,37,38,39,40,41,42,43,44,51,55,63,68,69,73,],[-23,-24,-22,-20,48,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-21,59,63,-28,-25,-27,-26,]),'COMMA':([6,7,24,25,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,58,60,63,68,69,73,],[-23,-24,-22,-20,-5,50,52,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-21,-6,-9,-28,-25,-27,-26,]),'LEFT_BRACE':([49,53,54,70,],[57,61,62,71,]),'ELSE':([68,],[70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,48,57,61,62,71,],[1,56,64,65,66,72,]),'expr':([0,4,5,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,48,52,57,61,62,71,],[3,23,25,29,33,34,35,36,37,38,39,40,41,42,43,45,46,47,3,60,3,3,3,3,]),'parameters':([12,],[31,]),'args':([12,],[32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> ID EQUALS expr SEMICOLON','statement',4,'p_statement_assign','Sintatico.py',15),
  ('statement -> expr','statement',1,'p_statement_assign','Sintatico.py',16),
  ('statement -> ID EQUALS expr SEMICOLON statement','statement',5,'p_statement_assign','Sintatico.py',17),
  ('statement -> ID LEFT_PAREN parameters RIGHT_PAREN LEFT_BRACE statement RIGHT_BRACE','statement',7,'p_statement_function','Sintatico.py',24),
  ('parameters -> ID','parameters',1,'p_parameters','Sintatico.py',28),
  ('parameters -> parameters COMMA ID','parameters',3,'p_parameters','Sintatico.py',29),
  ('statement -> ID LEFT_PAREN args RIGHT_PAREN SEMICOLON','statement',5,'p_statement_function_call','Sintatico.py',36),
  ('args -> expr','args',1,'p_args','Sintatico.py',40),
  ('args -> args COMMA expr','args',3,'p_args','Sintatico.py',41),
  ('expr -> expr PLUS expr','expr',3,'p_expr_bin_op','Sintatico.py',48),
  ('expr -> expr MINUS expr','expr',3,'p_expr_bin_op','Sintatico.py',49),
  ('expr -> expr TIMES expr','expr',3,'p_expr_bin_op','Sintatico.py',50),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_bin_op','Sintatico.py',51),
  ('expr -> expr LESS_THAN expr','expr',3,'p_expr_relational','Sintatico.py',62),
  ('expr -> expr LESS_THAN_EQUAL expr','expr',3,'p_expr_relational','Sintatico.py',63),
  ('expr -> expr GREATER_THAN expr','expr',3,'p_expr_relational','Sintatico.py',64),
  ('expr -> expr GREATER_THAN_EQUAL expr','expr',3,'p_expr_relational','Sintatico.py',65),
  ('expr -> expr AND expr','expr',3,'p_expr_logical','Sintatico.py',69),
  ('expr -> expr OR expr','expr',3,'p_expr_logical','Sintatico.py',70),
  ('expr -> NOT expr','expr',2,'p_expr_logical','Sintatico.py',71),
  ('expr -> LEFT_PAREN expr RIGHT_PAREN','expr',3,'p_expr_group','Sintatico.py',80),
  ('expr -> ID','expr',1,'p_expr_id','Sintatico.py',84),
  ('expr -> NUMBER','expr',1,'p_expr_num','Sintatico.py',88),
  ('expr -> STRING','expr',1,'p_expr_string','Sintatico.py',100),
  ('expr -> IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE statement RIGHT_BRACE','expr',7,'p_expr_if','Sintatico.py',104),
  ('expr -> IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE statement RIGHT_BRACE ELSE LEFT_BRACE statement RIGHT_BRACE','expr',11,'p_expr_else','Sintatico.py',108),
  ('expr -> WHILE LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE statement RIGHT_BRACE','expr',7,'p_expr_while','Sintatico.py',112),
  ('expr -> PRINTF LEFT_PAREN expr RIGHT_PAREN SEMICOLON','expr',5,'p_expr_printf','Sintatico.py',116),
]
