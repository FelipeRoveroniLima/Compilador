
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA COMMENT DIVIDE ELSE EQUALS EQUALS_EQUALS FALSE GREATER_THAN GREATER_THAN_EQUAL ID IF LEFT_BRACE LEFT_PAREN LESS_THAN LESS_THAN_EQUAL MINUS NOT NUMBER OR PLUS PRINTF RIGHT_BRACE RIGHT_PAREN SEMICOLON STRING TIMES TRUE WHILEstart : ID LEFT_PAREN parameters RIGHT_PAREN LEFT_BRACE program RIGHT_BRACEprogram : ID EQUALS expr SEMICOLON program\n                     | ID EQUALS function_call SEMICOLON program\n                     | function_call SEMICOLON program\n                     | expr program\n                     | lambda\n                     expr : termfunction_call : ID LEFT_PAREN args RIGHT_PARENparameters : ID\n                      | parameters COMMA IDargs : expr\n                | args COMMA exprfactor : NUMBER\n            | ID\n            | LEFT_PAREN expr RIGHT_PARENterm : term TIMES factor\n                | term DIVIDE factorterm : factorexpr : expr PLUS term\n                | expr MINUS termexpr : expr EQUALS_EQUALS expr\n                | expr LESS_THAN expr\n                | expr LESS_THAN_EQUAL expr\n                | expr GREATER_THAN expr\n                | expr GREATER_THAN_EQUAL exprexpr : expr AND expr\n                | expr OR expr\n                | NOT exprexpr : STRINGexpr : TRUEexpr : FALSEexpr : IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACEexpr : IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACEexpr : WHILE LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE expr : PRINTF LEFT_PAREN expr RIGHT_PAREN SEMICOLONlambda :'
    
_lr_action_items = {'ID':([0,3,7,8,10,11,13,16,17,18,19,20,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,55,56,57,58,59,60,61,62,64,65,69,70,72,79,80,81,84,85,87,89,],[2,4,9,10,-14,29,10,-7,29,-29,-30,-31,-18,-13,48,29,-14,29,29,29,29,29,29,29,29,29,10,29,29,-28,29,29,29,-15,-19,-20,-21,-22,-23,-24,-25,-26,-27,-16,-17,10,10,29,10,10,-35,-32,-34,10,-33,]),'$end':([1,30,],[0,-1,]),'LEFT_PAREN':([2,8,10,11,13,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,64,65,69,70,72,79,80,81,84,85,87,89,],[3,11,27,11,11,-7,11,-29,-30,-31,45,46,47,-18,-13,11,11,-14,11,11,11,11,11,11,11,11,11,11,11,11,-28,11,11,11,27,-15,-19,-20,-21,-22,-23,-24,-25,-26,-27,-16,-17,11,11,11,11,11,-35,-32,-34,11,-33,]),'RIGHT_PAREN':([4,5,9,16,18,19,20,24,25,28,29,44,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,78,81,84,85,89,],[-9,6,-10,-7,-29,-30,-31,-18,-13,53,-14,-28,71,-11,-15,-19,-20,-21,-22,-23,-24,-25,-26,-27,-16,-17,73,74,75,-12,-35,-32,-34,-33,]),'COMMA':([4,5,9,16,18,19,20,24,25,29,44,51,52,53,54,55,56,57,58,59,60,61,62,64,65,78,81,84,85,89,],[-9,7,-10,-7,-29,-30,-31,-18,-13,-14,-28,72,-11,-15,-19,-20,-21,-22,-23,-24,-25,-26,-27,-16,-17,-12,-35,-32,-34,-33,]),'LEFT_BRACE':([6,73,74,86,],[8,79,80,87,]),'NOT':([8,10,11,13,16,17,18,19,20,24,25,26,27,29,34,35,36,37,38,39,40,41,44,45,46,47,53,54,55,56,57,58,59,60,61,62,64,65,69,70,72,79,80,81,84,85,87,89,],[17,-14,17,17,-7,17,-29,-30,-31,-18,-13,17,17,-14,17,17,17,17,17,17,17,17,-28,17,17,17,-15,-19,-20,-21,-22,-23,-24,-25,-26,-27,-16,-17,17,17,17,17,17,-35,-32,-34,17,-33,]),'STRING':([8,10,11,13,16,17,18,19,20,24,25,26,27,29,34,35,36,37,38,39,40,41,44,45,46,47,53,54,55,56,57,58,59,60,61,62,64,65,69,70,72,79,80,81,84,85,87,89,],[18,-14,18,18,-7,18,-29,-30,-31,-18,-13,18,18,-14,18,18,18,18,18,18,18,18,-28,18,18,18,-15,-19,-20,-21,-22,-23,-24,-25,-26,-27,-16,-17,18,18,18,18,18,-35,-32,-34,18,-33,]),'TRUE':([8,10,11,13,16,17,18,19,20,24,25,26,27,29,34,35,36,37,38,39,40,41,44,45,46,47,53,54,55,56,57,58,59,60,61,62,64,65,69,70,72,79,80,81,84,85,87,89,],[19,-14,19,19,-7,19,-29,-30,-31,-18,-13,19,19,-14,19,19,19,19,19,19,19,19,-28,19,19,19,-15,-19,-20,-21,-22,-23,-24,-25,-26,-27,-16,-17,19,19,19,19,19,-35,-32,-34,19,-33,]),'FALSE':([8,10,11,13,16,17,18,19,20,24,25,26,27,29,34,35,36,37,38,39,40,41,44,45,46,47,53,54,55,56,57,58,59,60,61,62,64,65,69,70,72,79,80,81,84,85,87,89,],[20,-14,20,20,-7,20,-29,-30,-31,-18,-13,20,20,-14,20,20,20,20,20,20,20,20,-28,20,20,20,-15,-19,-20,-21,-22,-23,-24,-25,-26,-27,-16,-17,20,20,20,20,20,-35,-32,-34,20,-33,]),'IF':([8,10,11,13,16,17,18,19,20,24,25,26,27,29,34,35,36,37,38,39,40,41,44,45,46,47,53,54,55,56,57,58,59,60,61,62,64,65,69,70,72,79,80,81,84,85,87,89,],[21,-14,21,21,-7,21,-29,-30,-31,-18,-13,21,21,-14,21,21,21,21,21,21,21,21,-28,21,21,21,-15,-19,-20,-21,-22,-23,-24,-25,-26,-27,-16,-17,21,21,21,21,21,-35,-32,-34,21,-33,]),'WHILE':([8,10,11,13,16,17,18,19,20,24,25,26,27,29,34,35,36,37,38,39,40,41,44,45,46,47,53,54,55,56,57,58,59,60,61,62,64,65,69,70,72,79,80,81,84,85,87,89,],[22,-14,22,22,-7,22,-29,-30,-31,-18,-13,22,22,-14,22,22,22,22,22,22,22,22,-28,22,22,22,-15,-19,-20,-21,-22,-23,-24,-25,-26,-27,-16,-17,22,22,22,22,22,-35,-32,-34,22,-33,]),'PRINTF':([8,10,11,13,16,17,18,19,20,24,25,26,27,29,34,35,36,37,38,39,40,41,44,45,46,47,53,54,55,56,57,58,59,60,61,62,64,65,69,70,72,79,80,81,84,85,87,89,],[23,-14,23,23,-7,23,-29,-30,-31,-18,-13,23,23,-14,23,23,23,23,23,23,23,23,-28,23,23,23,-15,-19,-20,-21,-22,-23,-24,-25,-26,-27,-16,-17,23,23,23,23,23,-35,-32,-34,23,-33,]),'RIGHT_BRACE':([8,10,12,13,15,16,18,19,20,24,25,29,31,41,44,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,76,77,79,80,81,82,83,84,85,87,88,89,],[-36,-14,30,-36,-6,-7,-29,-30,-31,-18,-13,-14,-5,-36,-28,-15,-19,-20,-21,-22,-23,-24,-25,-26,-27,-4,-16,-17,-36,-36,-2,-3,-36,-36,-35,84,85,-32,-34,-36,89,-33,]),'NUMBER':([8,10,11,13,16,17,18,19,20,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,55,56,57,58,59,60,61,62,64,65,69,70,72,79,80,81,84,85,87,89,],[25,-14,25,25,-7,25,-29,-30,-31,-18,-13,25,25,-14,25,25,25,25,25,25,25,25,25,25,25,25,-28,25,25,25,-15,-19,-20,-21,-22,-23,-24,-25,-26,-27,-16,-17,25,25,25,25,25,-35,-32,-34,25,-33,]),'EQUALS':([10,],[26,]),'TIMES':([10,16,24,25,29,48,53,54,55,64,65,],[-14,42,-18,-13,-14,-14,-15,42,42,-16,-17,]),'DIVIDE':([10,16,24,25,29,48,53,54,55,64,65,],[-14,43,-18,-13,-14,-14,-15,43,43,-16,-17,]),'PLUS':([10,13,16,18,19,20,24,25,28,29,44,48,49,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,78,81,84,85,89,],[-14,32,-7,-29,-30,-31,-18,-13,32,-14,32,-14,32,32,-15,-19,-20,32,32,32,32,32,32,32,-16,-17,32,32,32,32,-35,-32,-34,-33,]),'MINUS':([10,13,16,18,19,20,24,25,28,29,44,48,49,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,78,81,84,85,89,],[-14,33,-7,-29,-30,-31,-18,-13,33,-14,33,-14,33,33,-15,-19,-20,33,33,33,33,33,33,33,-16,-17,33,33,33,33,-35,-32,-34,-33,]),'EQUALS_EQUALS':([10,13,16,18,19,20,24,25,28,29,44,48,49,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,78,81,84,85,89,],[-14,34,-7,-29,-30,-31,-18,-13,34,-14,34,-14,34,34,-15,-19,-20,34,34,34,34,34,34,34,-16,-17,34,34,34,34,-35,-32,-34,-33,]),'LESS_THAN':([10,13,16,18,19,20,24,25,28,29,44,48,49,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,78,81,84,85,89,],[-14,35,-7,-29,-30,-31,-18,-13,35,-14,35,-14,35,35,-15,-19,-20,35,35,35,35,35,35,35,-16,-17,35,35,35,35,-35,-32,-34,-33,]),'LESS_THAN_EQUAL':([10,13,16,18,19,20,24,25,28,29,44,48,49,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,78,81,84,85,89,],[-14,36,-7,-29,-30,-31,-18,-13,36,-14,36,-14,36,36,-15,-19,-20,36,36,36,36,36,36,36,-16,-17,36,36,36,36,-35,-32,-34,-33,]),'GREATER_THAN':([10,13,16,18,19,20,24,25,28,29,44,48,49,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,78,81,84,85,89,],[-14,37,-7,-29,-30,-31,-18,-13,37,-14,37,-14,37,37,-15,-19,-20,37,37,37,37,37,37,37,-16,-17,37,37,37,37,-35,-32,-34,-33,]),'GREATER_THAN_EQUAL':([10,13,16,18,19,20,24,25,28,29,44,48,49,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,78,81,84,85,89,],[-14,38,-7,-29,-30,-31,-18,-13,38,-14,38,-14,38,38,-15,-19,-20,38,38,38,38,38,38,38,-16,-17,38,38,38,38,-35,-32,-34,-33,]),'AND':([10,13,16,18,19,20,24,25,28,29,44,48,49,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,78,81,84,85,89,],[-14,39,-7,-29,-30,-31,-18,-13,39,-14,39,-14,39,39,-15,-19,-20,39,39,39,39,39,39,39,-16,-17,39,39,39,39,-35,-32,-34,-33,]),'OR':([10,13,16,18,19,20,24,25,28,29,44,48,49,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,78,81,84,85,89,],[-14,40,-7,-29,-30,-31,-18,-13,40,-14,40,-14,40,40,-15,-19,-20,40,40,40,40,40,40,40,-16,-17,40,40,40,40,-35,-32,-34,-33,]),'SEMICOLON':([14,16,18,19,20,24,25,29,44,48,49,50,53,54,55,56,57,58,59,60,61,62,64,65,71,75,81,84,85,89,],[41,-7,-29,-30,-31,-18,-13,-14,-28,-14,69,70,-15,-19,-20,-21,-22,-23,-24,-25,-26,-27,-16,-17,-8,81,-35,-32,-34,-33,]),'ELSE':([84,],[86,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'parameters':([3,],[5,]),'program':([8,13,41,69,70,79,80,87,],[12,31,63,76,77,82,83,88,]),'expr':([8,11,13,17,26,27,34,35,36,37,38,39,40,41,45,46,47,69,70,72,79,80,87,],[13,28,13,44,49,52,56,57,58,59,60,61,62,13,66,67,68,13,13,78,13,13,13,]),'function_call':([8,13,26,41,69,70,79,80,87,],[14,14,50,14,14,14,14,14,14,]),'lambda':([8,13,41,69,70,79,80,87,],[15,15,15,15,15,15,15,15,]),'term':([8,11,13,17,26,27,32,33,34,35,36,37,38,39,40,41,45,46,47,69,70,72,79,80,87,],[16,16,16,16,16,16,54,55,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'factor':([8,11,13,17,26,27,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,69,70,72,79,80,87,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,64,65,24,24,24,24,24,24,24,24,24,]),'args':([27,],[51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> ID LEFT_PAREN parameters RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE','start',7,'p_start','sintatico.py',18),
  ('program -> ID EQUALS expr SEMICOLON program','program',5,'p_program','sintatico.py',29),
  ('program -> ID EQUALS function_call SEMICOLON program','program',5,'p_program','sintatico.py',30),
  ('program -> function_call SEMICOLON program','program',3,'p_program','sintatico.py',31),
  ('program -> expr program','program',2,'p_program','sintatico.py',32),
  ('program -> lambda','program',1,'p_program','sintatico.py',33),
  ('expr -> term','expr',1,'p_expr_term','sintatico.py',61),
  ('function_call -> ID LEFT_PAREN args RIGHT_PAREN','function_call',4,'p_function_call','sintatico.py',66),
  ('parameters -> ID','parameters',1,'p_parameters','sintatico.py',70),
  ('parameters -> parameters COMMA ID','parameters',3,'p_parameters','sintatico.py',71),
  ('args -> expr','args',1,'p_args','sintatico.py',79),
  ('args -> args COMMA expr','args',3,'p_args','sintatico.py',80),
  ('factor -> NUMBER','factor',1,'p_factor','sintatico.py',87),
  ('factor -> ID','factor',1,'p_factor','sintatico.py',88),
  ('factor -> LEFT_PAREN expr RIGHT_PAREN','factor',3,'p_factor','sintatico.py',89),
  ('term -> term TIMES factor','term',3,'p_term_op','sintatico.py',102),
  ('term -> term DIVIDE factor','term',3,'p_term_op','sintatico.py',103),
  ('term -> factor','term',1,'p_term_factor','sintatico.py',110),
  ('expr -> expr PLUS term','expr',3,'p_expr_op','sintatico.py',116),
  ('expr -> expr MINUS term','expr',3,'p_expr_op','sintatico.py',117),
  ('expr -> expr EQUALS_EQUALS expr','expr',3,'p_expr_relational','sintatico.py',125),
  ('expr -> expr LESS_THAN expr','expr',3,'p_expr_relational','sintatico.py',126),
  ('expr -> expr LESS_THAN_EQUAL expr','expr',3,'p_expr_relational','sintatico.py',127),
  ('expr -> expr GREATER_THAN expr','expr',3,'p_expr_relational','sintatico.py',128),
  ('expr -> expr GREATER_THAN_EQUAL expr','expr',3,'p_expr_relational','sintatico.py',129),
  ('expr -> expr AND expr','expr',3,'p_expr_logical','sintatico.py',134),
  ('expr -> expr OR expr','expr',3,'p_expr_logical','sintatico.py',135),
  ('expr -> NOT expr','expr',2,'p_expr_logical','sintatico.py',136),
  ('expr -> STRING','expr',1,'p_expr_string','sintatico.py',146),
  ('expr -> TRUE','expr',1,'p_expr_true','sintatico.py',150),
  ('expr -> FALSE','expr',1,'p_expr_false','sintatico.py',154),
  ('expr -> IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE','expr',7,'p_expr_if','sintatico.py',159),
  ('expr -> IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE','expr',11,'p_expr_if_else','sintatico.py',163),
  ('expr -> WHILE LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE','expr',7,'p_expr_while','sintatico.py',167),
  ('expr -> PRINTF LEFT_PAREN expr RIGHT_PAREN SEMICOLON','expr',5,'p_expr_printf','sintatico.py',171),
  ('lambda -> <empty>','lambda',0,'p_lambda','sintatico.py',176),
]
