
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA COMMENT DIVIDE ELSE EQUALS EQUALS_EQUALS FALSE GREATER_THAN GREATER_THAN_EQUAL ID IF LEFT_BRACE LEFT_PAREN LESS_THAN LESS_THAN_EQUAL MINUS NOT NUMBER OR PLUS PRINTF RIGHT_BRACE RIGHT_PAREN SEMICOLON STRING TIMES TRUE WHILEprogram : ID EQUALS expr SEMICOLON program\n                     | ID EQUALS function_call SEMICOLON program\n                     | function_call SEMICOLON program\n                     | expr program\n                     | lambda\n                     program : ID LEFT_PAREN parameters RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE programfunction_call : ID LEFT_PAREN args RIGHT_PARENparameters : ID\n                      | parameters COMMA IDexpr : expr PLUS term\n            | expr MINUS termexpr : termterm : term TIMES factor\n            | term DIVIDE factorterm : factorfactor : NUMBERfactor : IDfactor : LEFT_PAREN expr RIGHT_PARENargs : expr\n                | args COMMA exprexpr : expr PLUS expr\n                | expr MINUS expr\n                | expr TIMES expr\n                | expr DIVIDE exprexpr : expr EQUALS_EQUALS expr\n                | expr LESS_THAN expr\n                | expr LESS_THAN_EQUAL expr\n                | expr GREATER_THAN expr\n                | expr GREATER_THAN_EQUAL exprexpr : expr AND expr\n                | expr OR expr\n                | NOT exprexpr : LEFT_PAREN expr RIGHT_PARENexpr : IDexpr : NUMBERexpr : STRINGexpr : TRUEexpr : FALSEexpr : IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACEexpr : IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACEexpr : WHILE LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE expr : PRINTF LEFT_PAREN expr RIGHT_PAREN SEMICOLONlambda :'
    
_lr_action_items = {'ID':([0,2,3,6,7,8,9,10,11,12,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,70,71,72,74,76,83,86,87,88,89,93,94,95,98,100,],[2,-17,2,33,-12,33,-16,-36,-37,-38,-15,40,43,33,33,33,33,33,33,33,33,33,33,33,2,-17,64,64,-32,33,33,33,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-18,-13,-16,-17,33,-14,33,2,2,84,33,2,-18,2,2,-42,2,-39,-41,2,-40,]),'NOT':([0,2,3,6,7,8,9,10,11,12,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,33,36,37,38,39,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,70,71,72,76,83,86,87,88,89,93,94,95,98,100,],[8,-17,8,8,-12,8,-16,-36,-37,-38,-15,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-17,-32,8,8,8,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-18,-13,-16,-17,8,-14,8,8,8,8,8,-18,8,8,-42,8,-39,-41,8,-40,]),'LEFT_PAREN':([0,2,3,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,70,71,72,76,83,86,87,88,89,93,94,95,98,100,],[6,18,6,6,-12,6,-16,-36,-37,-38,37,38,39,-15,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-17,65,65,-32,6,6,6,70,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-18,-13,-16,-17,6,-14,6,6,6,6,6,-18,6,6,-42,6,-39,-41,6,-40,]),'NUMBER':([0,2,3,6,7,8,9,10,11,12,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,70,71,72,76,83,86,87,88,89,93,94,95,98,100,],[9,-17,9,9,-12,9,-16,-36,-37,-38,-15,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-17,63,63,-32,9,9,9,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-18,-13,-16,-17,9,-14,9,9,9,9,9,-18,9,9,-42,9,-39,-41,9,-40,]),'STRING':([0,2,3,6,7,8,9,10,11,12,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,33,36,37,38,39,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,70,71,72,76,83,86,87,88,89,93,94,95,98,100,],[10,-17,10,10,-12,10,-16,-36,-37,-38,-15,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-17,-32,10,10,10,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-18,-13,-16,-17,10,-14,10,10,10,10,10,-18,10,10,-42,10,-39,-41,10,-40,]),'TRUE':([0,2,3,6,7,8,9,10,11,12,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,33,36,37,38,39,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,70,71,72,76,83,86,87,88,89,93,94,95,98,100,],[11,-17,11,11,-12,11,-16,-36,-37,-38,-15,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-17,-32,11,11,11,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-18,-13,-16,-17,11,-14,11,11,11,11,11,-18,11,11,-42,11,-39,-41,11,-40,]),'FALSE':([0,2,3,6,7,8,9,10,11,12,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,33,36,37,38,39,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,70,71,72,76,83,86,87,88,89,93,94,95,98,100,],[12,-17,12,12,-12,12,-16,-36,-37,-38,-15,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-17,-32,12,12,12,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-18,-13,-16,-17,12,-14,12,12,12,12,12,-18,12,12,-42,12,-39,-41,12,-40,]),'IF':([0,2,3,6,7,8,9,10,11,12,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,33,36,37,38,39,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,70,71,72,76,83,86,87,88,89,93,94,95,98,100,],[13,-17,13,13,-12,13,-16,-36,-37,-38,-15,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-17,-32,13,13,13,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-18,-13,-16,-17,13,-14,13,13,13,13,13,-18,13,13,-42,13,-39,-41,13,-40,]),'WHILE':([0,2,3,6,7,8,9,10,11,12,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,33,36,37,38,39,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,70,71,72,76,83,86,87,88,89,93,94,95,98,100,],[14,-17,14,14,-12,14,-16,-36,-37,-38,-15,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-17,-32,14,14,14,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-18,-13,-16,-17,14,-14,14,14,14,14,14,-18,14,14,-42,14,-39,-41,14,-40,]),'PRINTF':([0,2,3,6,7,8,9,10,11,12,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,33,36,37,38,39,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,70,71,72,76,83,86,87,88,89,93,94,95,98,100,],[15,-17,15,15,-12,15,-16,-36,-37,-38,-15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-17,-32,15,15,15,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-18,-13,-16,-17,15,-14,15,15,15,15,15,-18,15,15,-42,15,-39,-41,15,-40,]),'$end':([0,1,2,3,5,7,9,10,11,12,16,19,31,33,36,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,71,72,81,82,86,89,93,94,95,96,100,],[-43,0,-17,-43,-5,-12,-16,-36,-37,-38,-15,-4,-43,-17,-32,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-3,-18,-13,-16,-17,-14,-43,-43,-1,-2,-18,-42,-43,-39,-41,-6,-40,]),'EQUALS':([2,],[17,]),'PLUS':([2,3,7,9,10,11,12,16,32,33,36,40,41,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,66,67,68,69,77,85,86,89,94,95,100,],[-17,20,-12,-16,-36,-37,-38,-15,20,-17,20,-17,20,-17,20,20,-10,20,-11,20,20,20,20,20,20,20,20,20,-18,-13,-16,-17,-14,20,20,20,20,20,-18,-42,-39,-41,-40,]),'MINUS':([2,3,7,9,10,11,12,16,32,33,36,40,41,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,66,67,68,69,77,85,86,89,94,95,100,],[-17,21,-12,-16,-36,-37,-38,-15,21,-17,21,-17,21,-17,21,21,-10,21,-11,21,21,21,21,21,21,21,21,21,-18,-13,-16,-17,-14,21,21,21,21,21,-18,-42,-39,-41,-40,]),'TIMES':([2,3,7,9,10,11,12,16,32,33,36,40,41,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,66,67,68,69,77,85,86,89,94,95,100,],[-17,22,34,-16,-36,-37,-38,-15,22,-17,22,-17,22,-17,22,22,34,22,34,22,22,22,22,22,22,22,22,22,-18,-13,-16,-17,-14,22,22,22,22,22,-18,-42,-39,-41,-40,]),'DIVIDE':([2,3,7,9,10,11,12,16,32,33,36,40,41,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,66,67,68,69,77,85,86,89,94,95,100,],[-17,23,35,-16,-36,-37,-38,-15,23,-17,23,-17,23,-17,23,23,35,23,35,23,23,23,23,23,23,23,23,23,-18,-13,-16,-17,-14,23,23,23,23,23,-18,-42,-39,-41,-40,]),'EQUALS_EQUALS':([2,3,7,9,10,11,12,16,32,33,36,40,41,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,66,67,68,69,77,85,86,89,94,95,100,],[-17,24,-12,-16,-36,-37,-38,-15,24,-17,24,-17,24,-17,24,24,-10,24,-11,24,24,24,24,24,24,24,24,24,-18,-13,-16,-17,-14,24,24,24,24,24,-18,-42,-39,-41,-40,]),'LESS_THAN':([2,3,7,9,10,11,12,16,32,33,36,40,41,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,66,67,68,69,77,85,86,89,94,95,100,],[-17,25,-12,-16,-36,-37,-38,-15,25,-17,25,-17,25,-17,25,25,-10,25,-11,25,25,25,25,25,25,25,25,25,-18,-13,-16,-17,-14,25,25,25,25,25,-18,-42,-39,-41,-40,]),'LESS_THAN_EQUAL':([2,3,7,9,10,11,12,16,32,33,36,40,41,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,66,67,68,69,77,85,86,89,94,95,100,],[-17,26,-12,-16,-36,-37,-38,-15,26,-17,26,-17,26,-17,26,26,-10,26,-11,26,26,26,26,26,26,26,26,26,-18,-13,-16,-17,-14,26,26,26,26,26,-18,-42,-39,-41,-40,]),'GREATER_THAN':([2,3,7,9,10,11,12,16,32,33,36,40,41,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,66,67,68,69,77,85,86,89,94,95,100,],[-17,27,-12,-16,-36,-37,-38,-15,27,-17,27,-17,27,-17,27,27,-10,27,-11,27,27,27,27,27,27,27,27,27,-18,-13,-16,-17,-14,27,27,27,27,27,-18,-42,-39,-41,-40,]),'GREATER_THAN_EQUAL':([2,3,7,9,10,11,12,16,32,33,36,40,41,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,66,67,68,69,77,85,86,89,94,95,100,],[-17,28,-12,-16,-36,-37,-38,-15,28,-17,28,-17,28,-17,28,28,-10,28,-11,28,28,28,28,28,28,28,28,28,-18,-13,-16,-17,-14,28,28,28,28,28,-18,-42,-39,-41,-40,]),'AND':([2,3,7,9,10,11,12,16,32,33,36,40,41,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,66,67,68,69,77,85,86,89,94,95,100,],[-17,29,-12,-16,-36,-37,-38,-15,29,-17,29,-17,29,-17,29,29,-10,29,-11,29,29,29,29,29,29,29,29,29,-18,-13,-16,-17,-14,29,29,29,29,29,-18,-42,-39,-41,-40,]),'OR':([2,3,7,9,10,11,12,16,32,33,36,40,41,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,66,67,68,69,77,85,86,89,94,95,100,],[-17,30,-12,-16,-36,-37,-38,-15,30,-17,30,-17,30,-17,30,30,-10,30,-11,30,30,30,30,30,30,30,30,30,-18,-13,-16,-17,-14,30,30,30,30,30,-18,-42,-39,-41,-40,]),'RIGHT_BRACE':([2,3,5,7,9,10,11,12,16,19,31,33,36,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,71,72,81,82,83,86,87,88,89,90,91,92,93,94,95,96,98,99,100,],[-17,-43,-5,-12,-16,-36,-37,-38,-15,-4,-43,-17,-32,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-3,-18,-13,-16,-17,-14,-43,-43,-1,-2,-43,-18,-43,-43,-42,93,94,95,-43,-39,-41,-6,-43,100,-40,]),'SEMICOLON':([4,7,9,10,11,12,16,33,36,40,41,42,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,66,75,80,86,89,94,95,100,],[31,-12,-16,-36,-37,-38,-15,-17,-32,-17,71,72,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-18,-13,-16,-17,-14,-7,89,-18,-42,-39,-41,-40,]),'RIGHT_PAREN':([7,9,10,11,12,16,32,33,36,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,66,67,68,69,77,84,85,86,89,94,95,100,],[-12,-16,-36,-37,-38,-15,61,-17,-32,-8,73,75,-19,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-18,-13,-16,-17,-14,78,79,80,86,-9,-20,-18,-42,-39,-41,-40,]),'COMMA':([7,9,10,11,12,16,33,36,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,66,84,85,86,89,94,95,100,],[-12,-16,-36,-37,-38,-15,-17,-32,-8,74,76,-19,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-18,-13,-16,-17,-14,-9,-20,-18,-42,-39,-41,-40,]),'LEFT_BRACE':([73,78,79,97,],[83,87,88,98,]),'ELSE':([94,],[97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,3,31,71,72,83,87,88,93,98,],[1,19,60,81,82,90,91,92,96,99,]),'expr':([0,3,6,8,17,18,20,21,22,23,24,25,26,27,28,29,30,31,37,38,39,65,70,71,72,76,83,87,88,93,98,],[3,3,32,36,41,46,47,49,51,52,53,54,55,56,57,58,59,3,67,68,69,77,46,3,3,85,3,3,3,3,3,]),'function_call':([0,3,17,31,71,72,83,87,88,93,98,],[4,4,42,4,4,4,4,4,4,4,4,]),'lambda':([0,3,31,71,72,83,87,88,93,98,],[5,5,5,5,5,5,5,5,5,5,]),'term':([0,3,6,8,17,18,20,21,22,23,24,25,26,27,28,29,30,31,37,38,39,65,70,71,72,76,83,87,88,93,98,],[7,7,7,7,7,7,48,50,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'factor':([0,3,6,8,17,18,20,21,22,23,24,25,26,27,28,29,30,31,34,35,37,38,39,65,70,71,72,76,83,87,88,93,98,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,62,66,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'parameters':([18,],[44,]),'args':([18,70,],[45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> ID EQUALS expr SEMICOLON program','program',5,'p_program','sintatico.py',17),
  ('program -> ID EQUALS function_call SEMICOLON program','program',5,'p_program','sintatico.py',18),
  ('program -> function_call SEMICOLON program','program',3,'p_program','sintatico.py',19),
  ('program -> expr program','program',2,'p_program','sintatico.py',20),
  ('program -> lambda','program',1,'p_program','sintatico.py',21),
  ('program -> ID LEFT_PAREN parameters RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE program','program',8,'p_program_function','sintatico.py',50),
  ('function_call -> ID LEFT_PAREN args RIGHT_PAREN','function_call',4,'p_function_call','sintatico.py',58),
  ('parameters -> ID','parameters',1,'p_parameters','sintatico.py',62),
  ('parameters -> parameters COMMA ID','parameters',3,'p_parameters','sintatico.py',63),
  ('expr -> expr PLUS term','expr',3,'p_expr_op','sintatico.py',70),
  ('expr -> expr MINUS term','expr',3,'p_expr_op','sintatico.py',71),
  ('expr -> term','expr',1,'p_expr_term','sintatico.py',79),
  ('term -> term TIMES factor','term',3,'p_term_op','sintatico.py',83),
  ('term -> term DIVIDE factor','term',3,'p_term_op','sintatico.py',84),
  ('term -> factor','term',1,'p_term_factor','sintatico.py',93),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintatico.py',97),
  ('factor -> ID','factor',1,'p_factor_id','sintatico.py',101),
  ('factor -> LEFT_PAREN expr RIGHT_PAREN','factor',3,'p_factor_expr','sintatico.py',105),
  ('args -> expr','args',1,'p_args','sintatico.py',109),
  ('args -> args COMMA expr','args',3,'p_args','sintatico.py',110),
  ('expr -> expr PLUS expr','expr',3,'p_expr_bin_op','sintatico.py',117),
  ('expr -> expr MINUS expr','expr',3,'p_expr_bin_op','sintatico.py',118),
  ('expr -> expr TIMES expr','expr',3,'p_expr_bin_op','sintatico.py',119),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_bin_op','sintatico.py',120),
  ('expr -> expr EQUALS_EQUALS expr','expr',3,'p_expr_relational','sintatico.py',131),
  ('expr -> expr LESS_THAN expr','expr',3,'p_expr_relational','sintatico.py',132),
  ('expr -> expr LESS_THAN_EQUAL expr','expr',3,'p_expr_relational','sintatico.py',133),
  ('expr -> expr GREATER_THAN expr','expr',3,'p_expr_relational','sintatico.py',134),
  ('expr -> expr GREATER_THAN_EQUAL expr','expr',3,'p_expr_relational','sintatico.py',135),
  ('expr -> expr AND expr','expr',3,'p_expr_logical','sintatico.py',139),
  ('expr -> expr OR expr','expr',3,'p_expr_logical','sintatico.py',140),
  ('expr -> NOT expr','expr',2,'p_expr_logical','sintatico.py',141),
  ('expr -> LEFT_PAREN expr RIGHT_PAREN','expr',3,'p_expr_group','sintatico.py',150),
  ('expr -> ID','expr',1,'p_expr_id','sintatico.py',154),
  ('expr -> NUMBER','expr',1,'p_expr_num','sintatico.py',158),
  ('expr -> STRING','expr',1,'p_expr_string','sintatico.py',170),
  ('expr -> TRUE','expr',1,'p_expr_true','sintatico.py',174),
  ('expr -> FALSE','expr',1,'p_expr_false','sintatico.py',178),
  ('expr -> IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE','expr',7,'p_expr_if','sintatico.py',184),
  ('expr -> IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE','expr',11,'p_expr_if_else','sintatico.py',188),
  ('expr -> WHILE LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE','expr',7,'p_expr_while','sintatico.py',192),
  ('expr -> PRINTF LEFT_PAREN expr RIGHT_PAREN SEMICOLON','expr',5,'p_expr_printf','sintatico.py',196),
  ('lambda -> <empty>','lambda',0,'p_lambda','sintatico.py',201),
]
