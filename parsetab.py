
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA DIVIDE ELSE EQUALS FALSE GREATER_THAN GREATER_THAN_EQUAL ID IF LEFT_BRACE LEFT_BRACKET LEFT_PAREN LESS_THAN LESS_THAN_EQUAL MINUS NOT NUMBER OR PLUS PRINTF RIGHT_BRACE RIGHT_BRACKET RIGHT_PAREN SEMICOLON STRING TIMES TRUE WHILEstatement : ID EQUALS expr SEMICOLON \n                    | exprexpr : expr PLUS expr\n                | expr MINUS expr\n                | expr TIMES expr\n                | expr DIVIDE exprexpr : expr LESS_THAN expr\n                | expr LESS_THAN_EQUAL expr\n                | expr GREATER_THAN expr\n                | expr GREATER_THAN_EQUAL exprexpr : expr AND expr\n                | expr OR expr\n                | NOT exprexpr : LEFT_PAREN expr RIGHT_PARENexpr : IDexpr : NUMBERexpr : STRINGexpr : IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE statement RIGHT_BRACE expr : WHILE LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE statement RIGHT_BRACE expr : PRINTF LEFT_PAREN expr RIGHT_PAREN SEMICOLON'
    
_lr_action_items = {'ID':([0,4,5,11,12,13,14,15,16,17,18,19,20,21,25,26,27,47,48,],[2,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,2,2,]),'NOT':([0,4,5,11,12,13,14,15,16,17,18,19,20,21,25,26,27,47,48,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'LEFT_PAREN':([0,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,47,48,],[5,5,5,25,26,27,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'NUMBER':([0,4,5,11,12,13,14,15,16,17,18,19,20,21,25,26,27,47,48,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'STRING':([0,4,5,11,12,13,14,15,16,17,18,19,20,21,25,26,27,47,48,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'IF':([0,4,5,11,12,13,14,15,16,17,18,19,20,21,25,26,27,47,48,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'WHILE':([0,4,5,11,12,13,14,15,16,17,18,19,20,21,25,26,27,47,48,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'PRINTF':([0,4,5,11,12,13,14,15,16,17,18,19,20,21,25,26,27,47,48,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'$end':([1,2,3,6,7,22,23,29,30,31,32,33,34,35,36,37,38,39,43,49,52,53,],[0,-15,-2,-16,-17,-13,-15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-14,-1,-20,-18,-19,]),'EQUALS':([2,],[11,]),'PLUS':([2,3,6,7,22,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,49,52,53,],[-15,12,-16,-17,12,-15,12,12,12,12,12,12,12,12,12,12,12,12,-14,12,12,12,-20,-18,-19,]),'MINUS':([2,3,6,7,22,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,49,52,53,],[-15,13,-16,-17,13,-15,13,13,13,13,13,13,13,13,13,13,13,13,-14,13,13,13,-20,-18,-19,]),'TIMES':([2,3,6,7,22,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,49,52,53,],[-15,14,-16,-17,14,-15,14,14,14,14,14,14,14,14,14,14,14,14,-14,14,14,14,-20,-18,-19,]),'DIVIDE':([2,3,6,7,22,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,49,52,53,],[-15,15,-16,-17,15,-15,15,15,15,15,15,15,15,15,15,15,15,15,-14,15,15,15,-20,-18,-19,]),'LESS_THAN':([2,3,6,7,22,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,49,52,53,],[-15,16,-16,-17,16,-15,16,16,16,16,16,16,16,16,16,16,16,16,-14,16,16,16,-20,-18,-19,]),'LESS_THAN_EQUAL':([2,3,6,7,22,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,49,52,53,],[-15,17,-16,-17,17,-15,17,17,17,17,17,17,17,17,17,17,17,17,-14,17,17,17,-20,-18,-19,]),'GREATER_THAN':([2,3,6,7,22,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,49,52,53,],[-15,18,-16,-17,18,-15,18,18,18,18,18,18,18,18,18,18,18,18,-14,18,18,18,-20,-18,-19,]),'GREATER_THAN_EQUAL':([2,3,6,7,22,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,49,52,53,],[-15,19,-16,-17,19,-15,19,19,19,19,19,19,19,19,19,19,19,19,-14,19,19,19,-20,-18,-19,]),'AND':([2,3,6,7,22,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,49,52,53,],[-15,20,-16,-17,20,-15,20,20,20,20,20,20,20,20,20,20,20,20,-14,20,20,20,-20,-18,-19,]),'OR':([2,3,6,7,22,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,49,52,53,],[-15,21,-16,-17,21,-15,21,21,21,21,21,21,21,21,21,21,21,21,-14,21,21,21,-20,-18,-19,]),'RIGHT_BRACE':([2,3,6,7,22,23,29,30,31,32,33,34,35,36,37,38,39,43,49,50,51,52,53,],[-15,-2,-16,-17,-13,-15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-14,-1,-20,52,53,-18,-19,]),'RIGHT_PAREN':([6,7,22,23,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,49,52,53,],[-16,-17,-13,-15,39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-14,44,45,46,-20,-18,-19,]),'SEMICOLON':([6,7,22,23,28,29,30,31,32,33,34,35,36,37,38,39,46,49,52,53,],[-16,-17,-13,-15,43,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-14,49,-20,-18,-19,]),'LEFT_BRACE':([44,45,],[47,48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,47,48,],[1,50,51,]),'expr':([0,4,5,11,12,13,14,15,16,17,18,19,20,21,25,26,27,47,48,],[3,22,24,28,29,30,31,32,33,34,35,36,37,38,40,41,42,3,3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> ID EQUALS expr SEMICOLON','statement',4,'p_statement_assign','Sintatico.py',15),
  ('statement -> expr','statement',1,'p_statement_assign','Sintatico.py',16),
  ('expr -> expr PLUS expr','expr',3,'p_expr_bin_op','Sintatico.py',23),
  ('expr -> expr MINUS expr','expr',3,'p_expr_bin_op','Sintatico.py',24),
  ('expr -> expr TIMES expr','expr',3,'p_expr_bin_op','Sintatico.py',25),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_bin_op','Sintatico.py',26),
  ('expr -> expr LESS_THAN expr','expr',3,'p_expr_relational','Sintatico.py',37),
  ('expr -> expr LESS_THAN_EQUAL expr','expr',3,'p_expr_relational','Sintatico.py',38),
  ('expr -> expr GREATER_THAN expr','expr',3,'p_expr_relational','Sintatico.py',39),
  ('expr -> expr GREATER_THAN_EQUAL expr','expr',3,'p_expr_relational','Sintatico.py',40),
  ('expr -> expr AND expr','expr',3,'p_expr_logical','Sintatico.py',44),
  ('expr -> expr OR expr','expr',3,'p_expr_logical','Sintatico.py',45),
  ('expr -> NOT expr','expr',2,'p_expr_logical','Sintatico.py',46),
  ('expr -> LEFT_PAREN expr RIGHT_PAREN','expr',3,'p_expr_group','Sintatico.py',55),
  ('expr -> ID','expr',1,'p_expr_id','Sintatico.py',59),
  ('expr -> NUMBER','expr',1,'p_expr_num','Sintatico.py',63),
  ('expr -> STRING','expr',1,'p_expr_string','Sintatico.py',75),
  ('expr -> IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE statement RIGHT_BRACE','expr',7,'p_expr_if','Sintatico.py',79),
  ('expr -> WHILE LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE statement RIGHT_BRACE','expr',7,'p_expr_while','Sintatico.py',83),
  ('expr -> PRINTF LEFT_PAREN expr RIGHT_PAREN SEMICOLON','expr',5,'p_expr_printf','Sintatico.py',87),
]
