
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA COMMENT DIVIDE ELSE EQUALS FALSE GREATER_THAN GREATER_THAN_EQUAL ID IF LEFT_BRACE LEFT_PAREN LESS_THAN LESS_THAN_EQUAL MINUS NOT NUMBER OR PLUS PRINTF RIGHT_BRACE RIGHT_PAREN SEMICOLON STRING TIMES TRUE WHILEprogram : ID EQUALS expr SEMICOLON program\n                     | ID EQUALS function_call SEMICOLON program\n                     | function_call SEMICOLON program\n                     | expr program\n                     | lambda\n                     program : ID LEFT_PAREN parameters RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE programfunction_call : ID LEFT_PAREN args RIGHT_PARENparameters : ID\n                      | parameters COMMA IDargs : expr\n                | args COMMA exprexpr : expr PLUS expr\n                | expr MINUS expr\n                | expr TIMES expr\n                | expr DIVIDE exprexpr : expr LESS_THAN expr\n                | expr LESS_THAN_EQUAL expr\n                | expr GREATER_THAN expr\n                | expr GREATER_THAN_EQUAL exprexpr : expr AND expr\n                | expr OR expr\n                | NOT exprexpr : LEFT_PAREN expr RIGHT_PARENexpr : IDexpr : NUMBERexpr : STRINGexpr : TRUEexpr : FALSEexpr : IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACEexpr : IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACEexpr : WHILE LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE expr : PRINTF LEFT_PAREN expr RIGHT_PAREN SEMICOLONlambda :'
    
_lr_action_items = {'ID':([0,2,3,6,7,8,9,10,11,15,16,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,42,43,44,45,46,47,48,49,50,51,53,57,58,59,61,63,69,72,73,74,78,79,80,83,85,],[2,-24,2,30,30,-25,-26,-27,-28,35,38,30,30,30,30,30,30,30,30,30,30,2,-24,-22,30,30,30,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,30,2,2,70,30,2,2,2,-32,2,-29,-31,2,-30,]),'NOT':([0,2,3,6,7,8,9,10,11,15,16,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,42,43,44,45,46,47,48,49,50,51,53,57,58,59,63,69,72,73,74,78,79,80,83,85,],[7,-24,7,7,7,-25,-26,-27,-28,7,7,7,7,7,7,7,7,7,7,7,7,7,-24,-22,7,7,7,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,7,7,7,7,7,7,7,-32,7,-29,-31,7,-30,]),'LEFT_PAREN':([0,2,3,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,42,43,44,45,46,47,48,49,50,51,53,57,58,59,63,69,72,73,74,78,79,80,83,85,],[6,16,6,6,6,-25,-26,-27,-28,32,33,34,6,6,6,6,6,6,6,6,6,6,6,6,6,-24,-22,6,6,6,57,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,6,6,6,6,6,6,6,-32,6,-29,-31,6,-30,]),'NUMBER':([0,2,3,6,7,8,9,10,11,15,16,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,42,43,44,45,46,47,48,49,50,51,53,57,58,59,63,69,72,73,74,78,79,80,83,85,],[8,-24,8,8,8,-25,-26,-27,-28,8,8,8,8,8,8,8,8,8,8,8,8,8,-24,-22,8,8,8,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,8,8,8,8,8,8,8,-32,8,-29,-31,8,-30,]),'STRING':([0,2,3,6,7,8,9,10,11,15,16,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,42,43,44,45,46,47,48,49,50,51,53,57,58,59,63,69,72,73,74,78,79,80,83,85,],[9,-24,9,9,9,-25,-26,-27,-28,9,9,9,9,9,9,9,9,9,9,9,9,9,-24,-22,9,9,9,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,9,9,9,9,9,9,9,-32,9,-29,-31,9,-30,]),'TRUE':([0,2,3,6,7,8,9,10,11,15,16,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,42,43,44,45,46,47,48,49,50,51,53,57,58,59,63,69,72,73,74,78,79,80,83,85,],[10,-24,10,10,10,-25,-26,-27,-28,10,10,10,10,10,10,10,10,10,10,10,10,10,-24,-22,10,10,10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,10,10,10,10,10,10,10,-32,10,-29,-31,10,-30,]),'FALSE':([0,2,3,6,7,8,9,10,11,15,16,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,42,43,44,45,46,47,48,49,50,51,53,57,58,59,63,69,72,73,74,78,79,80,83,85,],[11,-24,11,11,11,-25,-26,-27,-28,11,11,11,11,11,11,11,11,11,11,11,11,11,-24,-22,11,11,11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,11,11,11,11,11,11,11,-32,11,-29,-31,11,-30,]),'IF':([0,2,3,6,7,8,9,10,11,15,16,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,42,43,44,45,46,47,48,49,50,51,53,57,58,59,63,69,72,73,74,78,79,80,83,85,],[12,-24,12,12,12,-25,-26,-27,-28,12,12,12,12,12,12,12,12,12,12,12,12,12,-24,-22,12,12,12,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,12,12,12,12,12,12,12,-32,12,-29,-31,12,-30,]),'WHILE':([0,2,3,6,7,8,9,10,11,15,16,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,42,43,44,45,46,47,48,49,50,51,53,57,58,59,63,69,72,73,74,78,79,80,83,85,],[13,-24,13,13,13,-25,-26,-27,-28,13,13,13,13,13,13,13,13,13,13,13,13,13,-24,-22,13,13,13,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,13,13,13,13,13,13,13,-32,13,-29,-31,13,-30,]),'PRINTF':([0,2,3,6,7,8,9,10,11,15,16,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,42,43,44,45,46,47,48,49,50,51,53,57,58,59,63,69,72,73,74,78,79,80,83,85,],[14,-24,14,14,14,-25,-26,-27,-28,14,14,14,14,14,14,14,14,14,14,14,14,14,-24,-22,14,14,14,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,14,14,14,14,14,14,14,-32,14,-29,-31,14,-30,]),'$end':([0,1,2,3,5,8,9,10,11,17,28,30,31,42,43,44,45,46,47,48,49,50,51,52,53,58,59,67,68,74,78,79,80,81,85,],[-33,0,-24,-33,-5,-25,-26,-27,-28,-4,-33,-24,-22,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-23,-33,-33,-1,-2,-32,-33,-29,-31,-6,-30,]),'EQUALS':([2,],[15,]),'PLUS':([2,3,8,9,10,11,29,30,31,35,36,38,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,71,74,79,80,85,],[-24,18,-25,-26,-27,-28,18,-24,18,-24,18,-24,18,18,18,18,18,18,18,18,18,18,18,-23,18,18,18,18,-32,-29,-31,-30,]),'MINUS':([2,3,8,9,10,11,29,30,31,35,36,38,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,71,74,79,80,85,],[-24,19,-25,-26,-27,-28,19,-24,19,-24,19,-24,19,19,19,19,19,19,19,19,19,19,19,-23,19,19,19,19,-32,-29,-31,-30,]),'TIMES':([2,3,8,9,10,11,29,30,31,35,36,38,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,71,74,79,80,85,],[-24,20,-25,-26,-27,-28,20,-24,20,-24,20,-24,20,20,20,20,20,20,20,20,20,20,20,-23,20,20,20,20,-32,-29,-31,-30,]),'DIVIDE':([2,3,8,9,10,11,29,30,31,35,36,38,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,71,74,79,80,85,],[-24,21,-25,-26,-27,-28,21,-24,21,-24,21,-24,21,21,21,21,21,21,21,21,21,21,21,-23,21,21,21,21,-32,-29,-31,-30,]),'LESS_THAN':([2,3,8,9,10,11,29,30,31,35,36,38,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,71,74,79,80,85,],[-24,22,-25,-26,-27,-28,22,-24,22,-24,22,-24,22,22,22,22,22,22,22,22,22,22,22,-23,22,22,22,22,-32,-29,-31,-30,]),'LESS_THAN_EQUAL':([2,3,8,9,10,11,29,30,31,35,36,38,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,71,74,79,80,85,],[-24,23,-25,-26,-27,-28,23,-24,23,-24,23,-24,23,23,23,23,23,23,23,23,23,23,23,-23,23,23,23,23,-32,-29,-31,-30,]),'GREATER_THAN':([2,3,8,9,10,11,29,30,31,35,36,38,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,71,74,79,80,85,],[-24,24,-25,-26,-27,-28,24,-24,24,-24,24,-24,24,24,24,24,24,24,24,24,24,24,24,-23,24,24,24,24,-32,-29,-31,-30,]),'GREATER_THAN_EQUAL':([2,3,8,9,10,11,29,30,31,35,36,38,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,71,74,79,80,85,],[-24,25,-25,-26,-27,-28,25,-24,25,-24,25,-24,25,25,25,25,25,25,25,25,25,25,25,-23,25,25,25,25,-32,-29,-31,-30,]),'AND':([2,3,8,9,10,11,29,30,31,35,36,38,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,71,74,79,80,85,],[-24,26,-25,-26,-27,-28,26,-24,26,-24,26,-24,26,26,26,26,26,26,26,26,26,26,26,-23,26,26,26,26,-32,-29,-31,-30,]),'OR':([2,3,8,9,10,11,29,30,31,35,36,38,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,71,74,79,80,85,],[-24,27,-25,-26,-27,-28,27,-24,27,-24,27,-24,27,27,27,27,27,27,27,27,27,27,27,-23,27,27,27,27,-32,-29,-31,-30,]),'RIGHT_BRACE':([2,3,5,8,9,10,11,17,28,30,31,42,43,44,45,46,47,48,49,50,51,52,53,58,59,67,68,69,72,73,74,75,76,77,78,79,80,81,83,84,85,],[-24,-33,-5,-25,-26,-27,-28,-4,-33,-24,-22,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-23,-33,-33,-1,-2,-33,-33,-33,-32,78,79,80,-33,-29,-31,-6,-33,85,-30,]),'SEMICOLON':([4,8,9,10,11,30,31,35,36,37,42,43,44,45,46,47,48,49,50,51,53,62,66,74,79,80,85,],[28,-25,-26,-27,-28,-24,-22,-24,58,59,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-7,74,-32,-29,-31,-30,]),'RIGHT_PAREN':([8,9,10,11,29,30,31,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,70,71,74,79,80,85,],[-25,-26,-27,-28,53,-24,-22,-8,60,62,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,64,65,66,-9,-11,-32,-29,-31,-30,]),'COMMA':([8,9,10,11,30,31,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,70,71,74,79,80,85,],[-25,-26,-27,-28,-24,-22,-8,61,63,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-9,-11,-32,-29,-31,-30,]),'LEFT_BRACE':([60,64,65,82,],[69,72,73,83,]),'ELSE':([79,],[82,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,3,28,58,59,69,72,73,78,83,],[1,17,52,67,68,75,76,77,81,84,]),'expr':([0,3,6,7,15,16,18,19,20,21,22,23,24,25,26,27,28,32,33,34,57,58,59,63,69,72,73,78,83,],[3,3,29,31,36,41,42,43,44,45,46,47,48,49,50,51,3,54,55,56,41,3,3,71,3,3,3,3,3,]),'function_call':([0,3,15,28,58,59,69,72,73,78,83,],[4,4,37,4,4,4,4,4,4,4,4,]),'lambda':([0,3,28,58,59,69,72,73,78,83,],[5,5,5,5,5,5,5,5,5,5,]),'parameters':([16,],[39,]),'args':([16,57,],[40,40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> ID EQUALS expr SEMICOLON program','program',5,'p_program','Sintatico.py',16),
  ('program -> ID EQUALS function_call SEMICOLON program','program',5,'p_program','Sintatico.py',17),
  ('program -> function_call SEMICOLON program','program',3,'p_program','Sintatico.py',18),
  ('program -> expr program','program',2,'p_program','Sintatico.py',19),
  ('program -> lambda','program',1,'p_program','Sintatico.py',20),
  ('program -> ID LEFT_PAREN parameters RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE program','program',8,'p_program_function','Sintatico.py',49),
  ('function_call -> ID LEFT_PAREN args RIGHT_PAREN','function_call',4,'p_function_call','Sintatico.py',57),
  ('parameters -> ID','parameters',1,'p_parameters','Sintatico.py',61),
  ('parameters -> parameters COMMA ID','parameters',3,'p_parameters','Sintatico.py',62),
  ('args -> expr','args',1,'p_args','Sintatico.py',70),
  ('args -> args COMMA expr','args',3,'p_args','Sintatico.py',71),
  ('expr -> expr PLUS expr','expr',3,'p_expr_bin_op','Sintatico.py',78),
  ('expr -> expr MINUS expr','expr',3,'p_expr_bin_op','Sintatico.py',79),
  ('expr -> expr TIMES expr','expr',3,'p_expr_bin_op','Sintatico.py',80),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_bin_op','Sintatico.py',81),
  ('expr -> expr LESS_THAN expr','expr',3,'p_expr_relational','Sintatico.py',92),
  ('expr -> expr LESS_THAN_EQUAL expr','expr',3,'p_expr_relational','Sintatico.py',93),
  ('expr -> expr GREATER_THAN expr','expr',3,'p_expr_relational','Sintatico.py',94),
  ('expr -> expr GREATER_THAN_EQUAL expr','expr',3,'p_expr_relational','Sintatico.py',95),
  ('expr -> expr AND expr','expr',3,'p_expr_logical','Sintatico.py',99),
  ('expr -> expr OR expr','expr',3,'p_expr_logical','Sintatico.py',100),
  ('expr -> NOT expr','expr',2,'p_expr_logical','Sintatico.py',101),
  ('expr -> LEFT_PAREN expr RIGHT_PAREN','expr',3,'p_expr_group','Sintatico.py',110),
  ('expr -> ID','expr',1,'p_expr_id','Sintatico.py',114),
  ('expr -> NUMBER','expr',1,'p_expr_num','Sintatico.py',118),
  ('expr -> STRING','expr',1,'p_expr_string','Sintatico.py',130),
  ('expr -> TRUE','expr',1,'p_expr_true','Sintatico.py',134),
  ('expr -> FALSE','expr',1,'p_expr_false','Sintatico.py',138),
  ('expr -> IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE','expr',7,'p_expr_if','Sintatico.py',144),
  ('expr -> IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE','expr',11,'p_expr_if_else','Sintatico.py',148),
  ('expr -> WHILE LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE','expr',7,'p_expr_while','Sintatico.py',152),
  ('expr -> PRINTF LEFT_PAREN expr RIGHT_PAREN SEMICOLON','expr',5,'p_expr_printf','Sintatico.py',156),
  ('lambda -> <empty>','lambda',0,'p_lambda','Sintatico.py',161),
]
