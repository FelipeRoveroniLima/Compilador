
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA COMMENT DIVIDE ELSE EQUALS EQUALS_EQUALS FALSE GREATER_THAN GREATER_THAN_EQUAL ID IF LEFT_BRACE LEFT_PAREN LESS_THAN LESS_THAN_EQUAL MINUS NOT NUMBER OR PLUS PRINTF RIGHT_BRACE RIGHT_PAREN SEMICOLON STRING TIMES TRUE WHILEstart : ID LEFT_PAREN parameters RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE programprogram : ID EQUALS expr SEMICOLON program\n                     | ID EQUALS function_call SEMICOLON program\n                     | function_call SEMICOLON program\n                     | expr program\n                     | lambda\n                     function_call : ID LEFT_PAREN args RIGHT_PARENparameters : ID\n                      | parameters COMMA IDexpr : expr PLUS term\n                | expr MINUS termexpr : termterm : term TIMES factor\n                | term DIVIDE factorterm : factorfactor : NUMBERfactor : IDfactor : LEFT_PAREN expr RIGHT_PARENargs : expr\n                | args COMMA exprexpr : expr PLUS expr\n                | expr MINUS expr\n                | expr TIMES expr\n                | expr DIVIDE exprexpr : expr EQUALS_EQUALS expr\n                | expr LESS_THAN expr\n                | expr LESS_THAN_EQUAL expr\n                | expr GREATER_THAN expr\n                | expr GREATER_THAN_EQUAL exprexpr : expr AND expr\n                | expr OR expr\n                | NOT exprexpr : LEFT_PAREN expr RIGHT_PARENexpr : IDexpr : NUMBERexpr : STRINGexpr : TRUEexpr : FALSEexpr : IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACEexpr : IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACEexpr : WHILE LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE expr : PRINTF LEFT_PAREN expr RIGHT_PAREN SEMICOLONlambda :'
    
_lr_action_items = {'ID':([0,3,7,8,10,11,13,16,17,18,19,20,21,25,26,27,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,79,80,82,90,91,92,93,96,97,99,101,],[2,4,9,10,-17,29,10,-12,29,-16,-36,-37,-38,-15,50,29,-17,10,29,29,29,29,29,29,29,29,29,29,29,10,73,73,-32,29,29,29,-18,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-13,-16,-17,29,-14,10,10,29,-18,10,10,-42,-39,-41,10,-40,]),'$end':([1,10,13,15,16,18,19,20,21,25,29,30,31,43,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,79,80,87,88,90,93,96,97,101,],[0,-17,-43,-6,-12,-16,-36,-37,-38,-15,-17,-43,-5,-43,-32,-18,-1,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-4,-13,-16,-17,-14,-43,-43,-2,-3,-18,-42,-39,-41,-40,]),'LEFT_PAREN':([2,8,10,11,13,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,79,80,82,90,91,92,93,96,97,99,101,],[3,11,27,11,11,-12,11,-16,-36,-37,-38,47,48,49,-15,11,11,-17,11,11,11,11,11,11,11,11,11,11,11,11,11,74,74,-32,11,11,11,27,-18,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-13,-16,-17,11,-14,11,11,11,-18,11,11,-42,-39,-41,11,-40,]),'RIGHT_PAREN':([4,5,9,16,18,19,20,21,25,28,29,46,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,76,77,78,83,89,90,93,96,97,101,],[-8,6,-9,-12,-16,-36,-37,-38,-15,55,-17,-32,81,-19,-18,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-13,-16,-17,-14,84,85,86,90,-20,-18,-42,-39,-41,-40,]),'COMMA':([4,5,9,16,18,19,20,21,25,29,46,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,89,90,93,96,97,101,],[-8,7,-9,-12,-16,-36,-37,-38,-15,-17,-32,82,-19,-18,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-13,-16,-17,-14,-20,-18,-42,-39,-41,-40,]),'LEFT_BRACE':([6,84,85,98,],[8,91,92,99,]),'NOT':([8,10,11,13,16,17,18,19,20,21,25,26,27,29,30,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,79,80,82,90,91,92,93,96,97,99,101,],[17,-17,17,17,-12,17,-16,-36,-37,-38,-15,17,17,-17,17,17,17,17,17,17,17,17,17,17,17,17,17,-32,17,17,17,-18,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-13,-16,-17,17,-14,17,17,17,-18,17,17,-42,-39,-41,17,-40,]),'NUMBER':([8,10,11,13,16,17,18,19,20,21,25,26,27,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,79,80,82,90,91,92,93,96,97,99,101,],[18,-17,18,18,-12,18,-16,-36,-37,-38,-15,18,18,-17,18,18,18,18,18,18,18,18,18,18,18,18,18,72,72,-32,18,18,18,-18,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-13,-16,-17,18,-14,18,18,18,-18,18,18,-42,-39,-41,18,-40,]),'STRING':([8,10,11,13,16,17,18,19,20,21,25,26,27,29,30,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,79,80,82,90,91,92,93,96,97,99,101,],[19,-17,19,19,-12,19,-16,-36,-37,-38,-15,19,19,-17,19,19,19,19,19,19,19,19,19,19,19,19,19,-32,19,19,19,-18,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-13,-16,-17,19,-14,19,19,19,-18,19,19,-42,-39,-41,19,-40,]),'TRUE':([8,10,11,13,16,17,18,19,20,21,25,26,27,29,30,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,79,80,82,90,91,92,93,96,97,99,101,],[20,-17,20,20,-12,20,-16,-36,-37,-38,-15,20,20,-17,20,20,20,20,20,20,20,20,20,20,20,20,20,-32,20,20,20,-18,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-13,-16,-17,20,-14,20,20,20,-18,20,20,-42,-39,-41,20,-40,]),'FALSE':([8,10,11,13,16,17,18,19,20,21,25,26,27,29,30,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,79,80,82,90,91,92,93,96,97,99,101,],[21,-17,21,21,-12,21,-16,-36,-37,-38,-15,21,21,-17,21,21,21,21,21,21,21,21,21,21,21,21,21,-32,21,21,21,-18,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-13,-16,-17,21,-14,21,21,21,-18,21,21,-42,-39,-41,21,-40,]),'IF':([8,10,11,13,16,17,18,19,20,21,25,26,27,29,30,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,79,80,82,90,91,92,93,96,97,99,101,],[22,-17,22,22,-12,22,-16,-36,-37,-38,-15,22,22,-17,22,22,22,22,22,22,22,22,22,22,22,22,22,-32,22,22,22,-18,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-13,-16,-17,22,-14,22,22,22,-18,22,22,-42,-39,-41,22,-40,]),'WHILE':([8,10,11,13,16,17,18,19,20,21,25,26,27,29,30,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,79,80,82,90,91,92,93,96,97,99,101,],[23,-17,23,23,-12,23,-16,-36,-37,-38,-15,23,23,-17,23,23,23,23,23,23,23,23,23,23,23,23,23,-32,23,23,23,-18,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-13,-16,-17,23,-14,23,23,23,-18,23,23,-42,-39,-41,23,-40,]),'PRINTF':([8,10,11,13,16,17,18,19,20,21,25,26,27,29,30,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,79,80,82,90,91,92,93,96,97,99,101,],[24,-17,24,24,-12,24,-16,-36,-37,-38,-15,24,24,-17,24,24,24,24,24,24,24,24,24,24,24,24,24,-32,24,24,24,-18,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-13,-16,-17,24,-14,24,24,24,-18,24,24,-42,-39,-41,24,-40,]),'RIGHT_BRACE':([8,10,12,13,15,16,18,19,20,21,25,29,31,43,46,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,79,80,87,88,90,91,92,93,94,95,96,97,99,100,101,],[-43,-17,30,-43,-6,-12,-16,-36,-37,-38,-15,-17,-5,-43,-32,-18,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-4,-13,-16,-17,-14,-43,-43,-2,-3,-18,-43,-43,-42,96,97,-39,-41,-43,101,-40,]),'EQUALS':([10,],[26,]),'PLUS':([10,13,16,18,19,20,21,25,28,29,46,50,51,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,76,77,78,83,89,90,93,96,97,101,],[-17,32,-12,-16,-36,-37,-38,-15,32,-17,32,-17,32,32,-18,32,-10,32,-11,32,32,32,32,32,32,32,32,32,-13,-16,-17,-14,32,32,32,32,32,-18,-42,-39,-41,-40,]),'MINUS':([10,13,16,18,19,20,21,25,28,29,46,50,51,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,76,77,78,83,89,90,93,96,97,101,],[-17,33,-12,-16,-36,-37,-38,-15,33,-17,33,-17,33,33,-18,33,-10,33,-11,33,33,33,33,33,33,33,33,33,-13,-16,-17,-14,33,33,33,33,33,-18,-42,-39,-41,-40,]),'TIMES':([10,13,16,18,19,20,21,25,28,29,46,50,51,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,76,77,78,83,89,90,93,96,97,101,],[-17,34,44,-16,-36,-37,-38,-15,34,-17,34,-17,34,34,-18,34,44,34,44,34,34,34,34,34,34,34,34,34,-13,-16,-17,-14,34,34,34,34,34,-18,-42,-39,-41,-40,]),'DIVIDE':([10,13,16,18,19,20,21,25,28,29,46,50,51,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,76,77,78,83,89,90,93,96,97,101,],[-17,35,45,-16,-36,-37,-38,-15,35,-17,35,-17,35,35,-18,35,45,35,45,35,35,35,35,35,35,35,35,35,-13,-16,-17,-14,35,35,35,35,35,-18,-42,-39,-41,-40,]),'EQUALS_EQUALS':([10,13,16,18,19,20,21,25,28,29,46,50,51,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,76,77,78,83,89,90,93,96,97,101,],[-17,36,-12,-16,-36,-37,-38,-15,36,-17,36,-17,36,36,-18,36,-10,36,-11,36,36,36,36,36,36,36,36,36,-13,-16,-17,-14,36,36,36,36,36,-18,-42,-39,-41,-40,]),'LESS_THAN':([10,13,16,18,19,20,21,25,28,29,46,50,51,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,76,77,78,83,89,90,93,96,97,101,],[-17,37,-12,-16,-36,-37,-38,-15,37,-17,37,-17,37,37,-18,37,-10,37,-11,37,37,37,37,37,37,37,37,37,-13,-16,-17,-14,37,37,37,37,37,-18,-42,-39,-41,-40,]),'LESS_THAN_EQUAL':([10,13,16,18,19,20,21,25,28,29,46,50,51,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,76,77,78,83,89,90,93,96,97,101,],[-17,38,-12,-16,-36,-37,-38,-15,38,-17,38,-17,38,38,-18,38,-10,38,-11,38,38,38,38,38,38,38,38,38,-13,-16,-17,-14,38,38,38,38,38,-18,-42,-39,-41,-40,]),'GREATER_THAN':([10,13,16,18,19,20,21,25,28,29,46,50,51,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,76,77,78,83,89,90,93,96,97,101,],[-17,39,-12,-16,-36,-37,-38,-15,39,-17,39,-17,39,39,-18,39,-10,39,-11,39,39,39,39,39,39,39,39,39,-13,-16,-17,-14,39,39,39,39,39,-18,-42,-39,-41,-40,]),'GREATER_THAN_EQUAL':([10,13,16,18,19,20,21,25,28,29,46,50,51,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,76,77,78,83,89,90,93,96,97,101,],[-17,40,-12,-16,-36,-37,-38,-15,40,-17,40,-17,40,40,-18,40,-10,40,-11,40,40,40,40,40,40,40,40,40,-13,-16,-17,-14,40,40,40,40,40,-18,-42,-39,-41,-40,]),'AND':([10,13,16,18,19,20,21,25,28,29,46,50,51,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,76,77,78,83,89,90,93,96,97,101,],[-17,41,-12,-16,-36,-37,-38,-15,41,-17,41,-17,41,41,-18,41,-10,41,-11,41,41,41,41,41,41,41,41,41,-13,-16,-17,-14,41,41,41,41,41,-18,-42,-39,-41,-40,]),'OR':([10,13,16,18,19,20,21,25,28,29,46,50,51,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,76,77,78,83,89,90,93,96,97,101,],[-17,42,-12,-16,-36,-37,-38,-15,42,-17,42,-17,42,42,-18,42,-10,42,-11,42,42,42,42,42,42,42,42,42,-13,-16,-17,-14,42,42,42,42,42,-18,-42,-39,-41,-40,]),'SEMICOLON':([14,16,18,19,20,21,25,29,46,50,51,52,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,81,86,90,93,96,97,101,],[43,-12,-16,-36,-37,-38,-15,-17,-32,-17,79,80,-18,-21,-10,-22,-11,-23,-24,-25,-26,-27,-28,-29,-30,-31,-13,-16,-17,-14,-7,93,-18,-42,-39,-41,-40,]),'ELSE':([96,],[98,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'parameters':([3,],[5,]),'program':([8,13,30,43,79,80,91,92,99,],[12,31,56,70,87,88,94,95,100,]),'expr':([8,11,13,17,26,27,30,32,33,34,35,36,37,38,39,40,41,42,43,47,48,49,74,79,80,82,91,92,99,],[13,28,13,46,51,54,13,57,59,61,62,63,64,65,66,67,68,69,13,76,77,78,83,13,13,89,13,13,13,]),'function_call':([8,13,26,30,43,79,80,91,92,99,],[14,14,52,14,14,14,14,14,14,14,]),'lambda':([8,13,30,43,79,80,91,92,99,],[15,15,15,15,15,15,15,15,15,]),'term':([8,11,13,17,26,27,30,32,33,34,35,36,37,38,39,40,41,42,43,47,48,49,74,79,80,82,91,92,99,],[16,16,16,16,16,16,16,58,60,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'factor':([8,11,13,17,26,27,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,74,79,80,82,91,92,99,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,71,75,25,25,25,25,25,25,25,25,25,25,]),'args':([27,],[53,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> ID LEFT_PAREN parameters RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE program','start',8,'p_start','Sintatico.py',14),
  ('program -> ID EQUALS expr SEMICOLON program','program',5,'p_program','Sintatico.py',21),
  ('program -> ID EQUALS function_call SEMICOLON program','program',5,'p_program','Sintatico.py',22),
  ('program -> function_call SEMICOLON program','program',3,'p_program','Sintatico.py',23),
  ('program -> expr program','program',2,'p_program','Sintatico.py',24),
  ('program -> lambda','program',1,'p_program','Sintatico.py',25),
  ('function_call -> ID LEFT_PAREN args RIGHT_PAREN','function_call',4,'p_function_call','Sintatico.py',49),
  ('parameters -> ID','parameters',1,'p_parameters','Sintatico.py',53),
  ('parameters -> parameters COMMA ID','parameters',3,'p_parameters','Sintatico.py',54),
  ('expr -> expr PLUS term','expr',3,'p_expr_op','Sintatico.py',61),
  ('expr -> expr MINUS term','expr',3,'p_expr_op','Sintatico.py',62),
  ('expr -> term','expr',1,'p_expr_term','Sintatico.py',69),
  ('term -> term TIMES factor','term',3,'p_term_op','Sintatico.py',73),
  ('term -> term DIVIDE factor','term',3,'p_term_op','Sintatico.py',74),
  ('term -> factor','term',1,'p_term_factor','Sintatico.py',81),
  ('factor -> NUMBER','factor',1,'p_factor_num','Sintatico.py',85),
  ('factor -> ID','factor',1,'p_factor_id','Sintatico.py',93),
  ('factor -> LEFT_PAREN expr RIGHT_PAREN','factor',3,'p_factor_expr','Sintatico.py',97),
  ('args -> expr','args',1,'p_args','Sintatico.py',101),
  ('args -> args COMMA expr','args',3,'p_args','Sintatico.py',102),
  ('expr -> expr PLUS expr','expr',3,'p_expr_bin_op','Sintatico.py',109),
  ('expr -> expr MINUS expr','expr',3,'p_expr_bin_op','Sintatico.py',110),
  ('expr -> expr TIMES expr','expr',3,'p_expr_bin_op','Sintatico.py',111),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_bin_op','Sintatico.py',112),
  ('expr -> expr EQUALS_EQUALS expr','expr',3,'p_expr_relational','Sintatico.py',123),
  ('expr -> expr LESS_THAN expr','expr',3,'p_expr_relational','Sintatico.py',124),
  ('expr -> expr LESS_THAN_EQUAL expr','expr',3,'p_expr_relational','Sintatico.py',125),
  ('expr -> expr GREATER_THAN expr','expr',3,'p_expr_relational','Sintatico.py',126),
  ('expr -> expr GREATER_THAN_EQUAL expr','expr',3,'p_expr_relational','Sintatico.py',127),
  ('expr -> expr AND expr','expr',3,'p_expr_logical','Sintatico.py',131),
  ('expr -> expr OR expr','expr',3,'p_expr_logical','Sintatico.py',132),
  ('expr -> NOT expr','expr',2,'p_expr_logical','Sintatico.py',133),
  ('expr -> LEFT_PAREN expr RIGHT_PAREN','expr',3,'p_expr_group','Sintatico.py',142),
  ('expr -> ID','expr',1,'p_expr_id','Sintatico.py',146),
  ('expr -> NUMBER','expr',1,'p_expr_num','Sintatico.py',150),
  ('expr -> STRING','expr',1,'p_expr_string','Sintatico.py',162),
  ('expr -> TRUE','expr',1,'p_expr_true','Sintatico.py',166),
  ('expr -> FALSE','expr',1,'p_expr_false','Sintatico.py',170),
  ('expr -> IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE','expr',7,'p_expr_if','Sintatico.py',174),
  ('expr -> IF LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE','expr',11,'p_expr_if_else','Sintatico.py',178),
  ('expr -> WHILE LEFT_PAREN expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE','expr',7,'p_expr_while','Sintatico.py',182),
  ('expr -> PRINTF LEFT_PAREN expr RIGHT_PAREN SEMICOLON','expr',5,'p_expr_printf','Sintatico.py',186),
  ('lambda -> <empty>','lambda',0,'p_lambda','Sintatico.py',190),
]
